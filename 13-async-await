
const { readFile, writeFile } = require('fs').promises

// const util = require('util')
// const readFilePromise = util.promisify(readFile)
// const writeFilePromise = util.promisify(writeFile)


// const getText = (path) => {
// 	return new Promise((resolve, reject) => {
// 		readFile(path, 'utf-8', (err, data) => {
// 			if (err) {
// 				reject(err)
// 			} else {
// 				resolve(data)
// 			}
// 		})
// 	})
// }

// Cleaner async function.
const start = async () => {
	try {
		const first = await readFile('./content/first.txt', 'utf-8')
		const second = await readFile('./content/second.txt', 'utf-8')
		console.log(first, second)

		await writeFile('./content/result-cleaner-await.txt', `This is using a cleaner way to read and write files using the inbuilt Util module.`)
	}
	catch (error) {
		console.log(error)
	}
}

start()